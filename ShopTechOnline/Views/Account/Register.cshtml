@model ShopTechOnline.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/main_styles.css">


<div class="container" style="margin-top:170px">
    <hr />
    <div class="row">
        <div class="col-md-12">
            <h2 id="title">Đăng ký tài khoản</h2>

            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="col-md-10">Tên tài khoản</label>
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-10">Họ tên</label>
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-10">Email</label>
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-10">Số điện thoại</label>
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-10">Mật khẩu</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            @Html.PasswordFor(x => x.Password, new { @class = "form-control", id = "passwordField" })
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility()">
                                    <i class="fa fa-eye" id="toggleEye"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-10">Nhập lại mật khẩu</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", id = "confirmPasswordField" })
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-secondary" onclick="toggleConfirmPasswordVisibility()">
                                    <i class="fa fa-eye" id="toggleConfirmEye"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Register" class="btn btn-outline-dark" />
                    </div>
                </div>

            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function togglePasswordVisibility() {
        var passwordField = document.getElementById("passwordField");
        var toggleEye = document.getElementById("toggleEye");

        if (passwordField.type === "password") {
            passwordField.type = "text";
            toggleEye.classList.remove("fa-eye");
            toggleEye.classList.add("fa-eye-slash");
        } else {
            passwordField.type = "password";
            toggleEye.classList.remove("fa-eye-slash");
            toggleEye.classList.add("fa-eye");
        }
    }

    function toggleConfirmPasswordVisibility() {
        var confirmPasswordField = document.getElementById("confirmPasswordField");
        var toggleConfirmEye = document.getElementById("toggleConfirmEye");

        if (confirmPasswordField.type === "password") {
            confirmPasswordField.type = "text";
            toggleConfirmEye.classList.remove("fa-eye");
            toggleConfirmEye.classList.add("fa-eye-slash");
        } else {
            confirmPasswordField.type = "password";
            toggleConfirmEye.classList.remove("fa-eye-slash");
            toggleConfirmEye.classList.add("fa-eye");
        }
    }
</script>
